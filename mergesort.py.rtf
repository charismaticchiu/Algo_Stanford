{\rtf1\ansi\ansicpg950\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red242\green242\blue242;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 def merge_sort(LEFT,RIGHT): #merging(sorting) \
    result = []\
    i = 0\
    j = 0\
    length_LEFT = len(LEFT)\
    length_RIGHT = len(RIGHT)\
\
    while i < length_LEFT or j < length_RIGHT: #Until all elements(LEFT/RIGHT)are add to the result\
\
        #Case 1 - comparing the elements and sorting them\
        if i < length_LEFT and j < length_RIGHT:\
            if LEFT[i] <= RIGHT[j]:\
                result += [LEFT[i]]\
                i = i + 1 #Move the pointer to the next element\
            else:\
                result += [RIGHT[j]]\
                j = j + 1 #Move the pointer to the next element\
\
        #Case 2 - if there are no elemts in the right side\
        #add all left elements to the result \
        elif i < length_LEFT:\
            result += [LEFT[i]]\
            i = i+1 #Move the pointer to the next element\
\
        #Case 3 - if there are no elemts in the left side\
        #add all right elements to the result\
        else:\
            result +=[RIGHT[j]]\
            j = j+1 #Move the pointer to the next element\
    return result\
\
def SPLITandSORT(unsorted_LIST): #Spliting and calling the merge_sort function to sort the splitted pieces\
    length = len(unsorted_LIST)\
    #Base case\
    if (length <= 1): #if the elements of the list are decreased to one just return the one element\
                      #(it is already sorted)\
        return unsorted_LIST\
    #Else start spliting and merge/sort\
    else:\
        mid = length/2\
        left = unsorted_LIST[0:mid]\
        right = unsorted_LIST[mid:]\
        sorted_left = SPLITandSORT(left)\
        sorted_right = SPLITandSORT(right)\
        return merge_sort(sorted_left,sorted_right)\
\
#TEST CASE\
print SPLITandSORT([-20,100,2,-94,43])
\fs26 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
}